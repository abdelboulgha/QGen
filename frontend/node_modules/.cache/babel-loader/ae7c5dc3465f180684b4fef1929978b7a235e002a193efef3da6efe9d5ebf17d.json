{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELHAMRI\\\\Desktop\\\\EMSI\\\\S2\\\\Projet\\\\QGen\\\\frontend\\\\src\\\\components\\\\common\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\n\n// Protected route component to check if user is authenticated and has correct role\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  role\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  if (!currentUser) {\n    // User is not logged in\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (role && currentUser.role !== role) {\n    // User doesn't have the required role\n    // Redirect to their appropriate dashboard\n    switch (currentUser.role) {\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n      case 'professor':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n      case 'student':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  // User is authenticated and has the right role\n  return children;\n};\n_s(ProtectedRoute, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","role","_s","currentUser","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ELHAMRI/Desktop/EMSI/S2/Projet/QGen/frontend/src/components/common/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\n// Protected route component to check if user is authenticated and has correct role\r\nconst ProtectedRoute = ({ children, role }) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  if (!currentUser) {\r\n    // User is not logged in\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  if (role && currentUser.role !== role) {\r\n    // User doesn't have the required role\r\n    // Redirect to their appropriate dashboard\r\n    switch (currentUser.role) {\r\n      case 'admin':\r\n        return <Navigate to=\"/admin\" />;\r\n      case 'professor':\r\n        return <Navigate to=\"/professor\" />;\r\n      case 'student':\r\n        return <Navigate to=\"/student\" />;\r\n      default:\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n  }\r\n\r\n  // User is authenticated and has the right role\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM;IAAEC;EAAY,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEjC,IAAI,CAACO,WAAW,EAAE;IAChB;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIP,IAAI,IAAIE,WAAW,CAACF,IAAI,KAAKA,IAAI,EAAE;IACrC;IACA;IACA,QAAQE,WAAW,CAACF,IAAI;MACtB,KAAK,OAAO;QACV,oBAAOH,OAAA,CAACH,QAAQ;UAACS,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACjC,KAAK,WAAW;QACd,oBAAOV,OAAA,CAACH,QAAQ;UAACS,EAAE,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrC,KAAK,SAAS;QACZ,oBAAOV,OAAA,CAACH,QAAQ;UAACS,EAAE,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnC;QACE,oBAAOV,OAAA,CAACH,QAAQ;UAACS,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACnC;EACF;;EAEA;EACA,OAAOR,QAAQ;AACjB,CAAC;AAACE,EAAA,CAzBIH,cAAc;EAAA,QACMH,OAAO;AAAA;AAAAa,EAAA,GAD3BV,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}