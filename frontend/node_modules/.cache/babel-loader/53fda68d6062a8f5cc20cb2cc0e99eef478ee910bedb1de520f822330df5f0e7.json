{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELHAMRI\\\\Desktop\\\\EMSI\\\\S2\\\\Projet\\\\QGen\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for saved user on load\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      const user = JSON.parse(savedUser);\n      setCurrentUser(user);\n\n      // Configuration d'Axios pour inclure le token dans les requêtes\n      if (user.token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function - connects to the API\n  const login = (token, role) => {\n    console.log(\"Logging in with token:\", token, \"and role:\", role);\n\n    // Créer l'objet utilisateur avec les informations disponibles\n    const user = {\n      token: token,\n      role: role.toLowerCase(),\n      // Conversion en minuscules\n      isAuthenticated: true\n    };\n\n    // Stocker les informations\n    setCurrentUser(user);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    // Configuration d'Axios pour les futures requêtes\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    console.log(\"User set in context:\", user);\n    return user;\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n\n    // Supprimer l'en-tête d'autorisation\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  // Register function - in real app, this would connect to the API\n  const register = async userData => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  // Fonction pour vérifier si le token est encore valide\n  const checkTokenValidity = async () => {\n    const user = currentUser;\n    if (!user || !user.token) return false;\n    try {\n      // Endpoint à adapter selon votre API (ou supprimer cette vérification si pas disponible)\n      // await axios.get('http://localhost:8080/api/auth/validate-token');\n      return true; // Assumer que le token est valide si pas d'API de validation\n    } catch (error) {\n      console.error(\"Token validation error:\", error);\n      // Token invalide ou expiré seulement si une erreur 401/403\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        logout();\n        return false;\n      }\n      return true; // Garder l'utilisateur connecté en cas d'autres erreurs\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    register,\n    checkTokenValidity\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","savedUser","localStorage","getItem","user","JSON","parse","token","defaults","headers","common","login","role","console","log","toLowerCase","isAuthenticated","setItem","stringify","logout","removeItem","register","userData","response","post","data","error","checkTokenValidity","status","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ELHAMRI/Desktop/EMSI/S2/Projet/QGen/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for saved user on load\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    \r\n    if (savedUser) {\r\n      const user = JSON.parse(savedUser);\r\n      setCurrentUser(user);\r\n      \r\n      // Configuration d'Axios pour inclure le token dans les requêtes\r\n      if (user.token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function - connects to the API\r\n  const login = (token, role) => {\r\n    console.log(\"Logging in with token:\", token, \"and role:\", role);\r\n    \r\n    // Créer l'objet utilisateur avec les informations disponibles\r\n    const user = {\r\n      token: token,\r\n      role: role.toLowerCase(), // Conversion en minuscules\r\n      isAuthenticated: true\r\n    };\r\n\r\n    // Stocker les informations\r\n    setCurrentUser(user);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    \r\n    // Configuration d'Axios pour les futures requêtes\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    \r\n    console.log(\"User set in context:\", user);\r\n    return user;\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('user');\r\n    \r\n    // Supprimer l'en-tête d'autorisation\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  // Register function - in real app, this would connect to the API\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/auth/register', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Fonction pour vérifier si le token est encore valide\r\n  const checkTokenValidity = async () => {\r\n    const user = currentUser;\r\n    if (!user || !user.token) return false;\r\n    \r\n    try {\r\n      // Endpoint à adapter selon votre API (ou supprimer cette vérification si pas disponible)\r\n      // await axios.get('http://localhost:8080/api/auth/validate-token');\r\n      return true; // Assumer que le token est valide si pas d'API de validation\r\n    } catch (error) {\r\n      console.error(\"Token validation error:\", error);\r\n      // Token invalide ou expiré seulement si une erreur 401/403\r\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n        logout();\r\n        return false;\r\n      }\r\n      return true; // Garder l'utilisateur connecté en cas d'autres erreurs\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n\r\n    register,\r\n    checkTokenValidity\r\n\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAE,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE9C,IAAIF,SAAS,EAAE;MACb,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MAClCH,cAAc,CAACM,IAAI,CAAC;;MAEpB;MACA,IAAIA,IAAI,CAACG,KAAK,EAAE;QACdnB,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,IAAI,CAACG,KAAK,EAAE;MACzE;IACF;IAEAP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,KAAK,GAAGA,CAACJ,KAAK,EAAEK,IAAI,KAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,KAAK,EAAE,WAAW,EAAEK,IAAI,CAAC;;IAE/D;IACA,MAAMR,IAAI,GAAG;MACXG,KAAK,EAAEA,KAAK;MACZK,IAAI,EAAEA,IAAI,CAACG,WAAW,CAAC,CAAC;MAAE;MAC1BC,eAAe,EAAE;IACnB,CAAC;;IAED;IACAlB,cAAc,CAACM,IAAI,CAAC;IACpBF,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACd,IAAI,CAAC,CAAC;;IAElD;IACAhB,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;IAElEM,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEV,IAAI,CAAC;IACzC,OAAOA,IAAI;EACb,CAAC;;EAED;EACA,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACnBjB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAChClB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;IAC/BtB,cAAc,CAAC,IAAI,CAAC;IACpBI,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;;IAE/B;IACA,OAAOhC,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD,CAAC;;EAED;EACA,MAAMW,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,IAAI,CAAC,yCAAyC,EAAEF,QAAQ,CAAC;MACtF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMvB,IAAI,GAAGP,WAAW;IACxB,IAAI,CAACO,IAAI,IAAI,CAACA,IAAI,CAACG,KAAK,EAAE,OAAO,KAAK;IAEtC,IAAI;MACF;MACA;MACA,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;MACA,IAAIA,KAAK,CAACH,QAAQ,KAAKG,KAAK,CAACH,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIF,KAAK,CAACH,QAAQ,CAACK,MAAM,KAAK,GAAG,CAAC,EAAE;QACtFT,MAAM,CAAC,CAAC;QACR,OAAO,KAAK;MACd;MACA,OAAO,IAAI,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMU,KAAK,GAAG;IACZhC,WAAW;IACXc,KAAK;IACLQ,MAAM;IAENE,QAAQ;IACRM;EAEF,CAAC;EAED,oBACErC,OAAA,CAACC,WAAW,CAACuC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlC,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACtC,GAAA,CApGWF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}