{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELHAMRI\\\\Desktop\\\\EMSI\\\\S2\\\\Projet\\\\QGen\\\\frontend\\\\src\\\\components\\\\admin\\\\UserManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Layout from '../common/Layout';\nimport './UserManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    nom: '',\n    prenom: '',\n    email: '',\n    motDePasse: ''\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [authStatus, setAuthStatus] = useState({\n    token: null,\n    isValid: false,\n    message: \"Vérification du token...\"\n  });\n\n  // Vérifier l'état d'authentification\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  // Fonction pour vérifier l'état d'authentification\n  const checkAuth = () => {\n    const token = localStorage.getItem('token');\n    console.log(\"Token trouvé:\", token ? \"Oui\" : \"Non\");\n    if (!token) {\n      setAuthStatus({\n        token: null,\n        isValid: false,\n        message: \"Aucun token trouvé. Veuillez vous connecter.\"\n      });\n      return null;\n    }\n\n    // Pour tester si le token est au format attendu\n    if (!token.startsWith(\"ey\")) {\n      console.warn(\"Le token ne semble pas être au format JWT (ne commence pas par 'ey')\");\n    }\n    setAuthStatus({\n      token: token,\n      isValid: true,\n      message: \"Token trouvé\"\n    });\n    return token;\n  };\n\n  // Charger les étudiants depuis l'API\n  useEffect(() => {\n    if (authStatus.isValid) {\n      fetchStudents();\n    }\n  }, [authStatus.isValid]);\n\n  // Fonction pour récupérer tous les étudiants\n  const fetchStudents = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    // Vérifier à nouveau l'authentification\n    const token = checkAuth();\n    if (!token) {\n      setIsLoading(false);\n      return;\n    }\n    try {\n      console.log(\"Tentative d'appel API avec token:\", `Bearer ${token.substring(0, 15)}...`);\n\n      // Définir les headers manuellement pour cette requête\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n\n      // Essayez d'appeler directement l'API sans intercepteur\n      const response = await axios.get('http://localhost:8080/api/etudiants', config);\n      console.log(\"Réponse API:\", response.status);\n      setStudents(response.data);\n      setSuccessMessage(\"Données étudiants chargées avec succès\");\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      console.error(\"Erreur détaillée:\", err);\n      if (err.response) {\n        // Si nous recevons une réponse avec une erreur\n        const statusCode = err.response.status;\n        const responseBody = err.response.data;\n        console.log({\n          status: statusCode,\n          data: responseBody,\n          headers: err.response.headers\n        });\n        if (statusCode === 403) {\n          setError(`Accès refusé (403). Il semble que vous n'ayez pas les permissions nécessaires.`);\n        } else if (statusCode === 401) {\n          setError(`Authentification invalide (401). Votre session a peut-être expiré.`);\n          // Réinitialiser le token\n          localStorage.removeItem('token');\n          setAuthStatus({\n            token: null,\n            isValid: false,\n            message: \"Token invalide ou expiré. Reconnexion nécessaire.\"\n          });\n        } else {\n          setError(`Erreur: ${statusCode} ${err.response.statusText}`);\n        }\n      } else if (err.request) {\n        // La requête a été envoyée mais pas de réponse\n        setError(\"Erreur de connexion: Impossible de joindre le serveur.\");\n      } else {\n        // Erreur lors de la création de la requête\n        setError(`Erreur lors de la requête: ${err.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Supprimer un étudiant\n  const handleDeleteStudent = async id => {\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cet étudiant ?')) {\n      try {\n        const token = checkAuth();\n        if (!token) return;\n        await axios.delete(`http://localhost:8080/api/etudiants/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        setStudents(students.filter(student => student.id !== id));\n        setSuccessMessage('Étudiant supprimé avec succès');\n        setTimeout(() => setSuccessMessage(''), 3000);\n      } catch (err) {\n        handleApiError(err, \"Erreur lors de la suppression\");\n      }\n    }\n  };\n\n  // Gérer les erreurs API\n  const handleApiError = (err, context) => {\n    console.error(`${context}:`, err);\n    if (err.response) {\n      const statusCode = err.response.status;\n      if (statusCode === 401) {\n        setError(\"Session expirée. Veuillez vous reconnecter.\");\n        localStorage.removeItem('token');\n        setAuthStatus({\n          token: null,\n          isValid: false,\n          message: \"Session expirée\"\n        });\n      } else {\n        setError(`${context}: ${statusCode} ${err.response.statusText}`);\n      }\n    } else if (err.request) {\n      setError(\"Erreur de connexion au serveur\");\n    } else {\n      setError(`${context}: ${err.message}`);\n    }\n  };\n\n  // Ouvrir la modal pour modifier un étudiant\n  const handleEditStudent = id => {\n    const studentToEdit = students.find(student => student.id === id);\n    if (studentToEdit) {\n      setNewStudent({\n        id: studentToEdit.id,\n        nom: studentToEdit.nom || '',\n        prenom: studentToEdit.prenom || '',\n        email: studentToEdit.email || '',\n        motDePasse: '' // Ne pas pré-remplir le mot de passe pour des raisons de sécurité\n      });\n      setIsModalOpen(true);\n    }\n  };\n\n  // Créer ou mettre à jour un étudiant\n  const handleSaveStudent = async () => {\n    // Validation simple\n    if (!newStudent.nom || !newStudent.prenom || !newStudent.email) {\n      setError('Veuillez remplir tous les champs obligatoires');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const token = checkAuth();\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      let response;\n      if (newStudent.id) {\n        // Mise à jour d'un étudiant existant\n        const studentToUpdate = {\n          nom: newStudent.nom,\n          prenom: newStudent.prenom,\n          email: newStudent.email\n        };\n\n        // N'ajouter le mot de passe que s'il est fourni\n        if (newStudent.motDePasse) {\n          studentToUpdate.motDePasse = newStudent.motDePasse;\n        }\n        console.log(\"Mise à jour étudiant:\", studentToUpdate);\n        response = await axios.put(`http://localhost:8080/api/etudiants/${newStudent.id}`, studentToUpdate, config);\n        console.log(\"Réponse mise à jour:\", response.data);\n\n        // Mettre à jour la liste des étudiants\n        setStudents(students.map(student => student.id === newStudent.id ? {\n          ...student,\n          nom: newStudent.nom,\n          prenom: newStudent.prenom,\n          email: newStudent.email\n        } : student));\n      } else {\n        // Création d'un nouvel étudiant\n        response = await axios.post('http://localhost:8080/api/admins/create-user', {\n          ...newStudent,\n          role: 'STUDENT'\n        }, config);\n\n        // Si on crée un nouvel étudiant, rafraîchir la liste complète\n        fetchStudents();\n      }\n\n      // Réinitialiser le formulaire et fermer la modal\n      setNewStudent({\n        nom: '',\n        prenom: '',\n        email: '',\n        motDePasse: ''\n      });\n      setIsModalOpen(false);\n      setSuccessMessage(newStudent.id ? 'Étudiant modifié avec succès' : 'Étudiant créé avec succès');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      handleApiError(err, \"Erreur lors de l'enregistrement\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filtrer les étudiants par nom ou prénom\n  const filteredStudents = students.filter(student => {\n    const fullName = `${student.nom || ''} ${student.prenom || ''}`.toLowerCase();\n    return fullName.includes(searchTerm.toLowerCase()) || student.email && student.email.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // Gérer la fermeture de la modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setNewStudent({\n      nom: '',\n      prenom: '',\n      email: '',\n      motDePasse: ''\n    });\n    setError(null);\n  };\n\n  // Se connecter (redirection)\n  const handleLogin = () => {\n    window.location.href = '/login';\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Gestion des \\xC9tudiants\",\n    userRole: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gestion des \\xC9tudiants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Rechercher par nom, pr\\xE9nom, email...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => setIsModalOpen(true),\n          disabled: !authStatus.isValid,\n          children: \"Ajouter un \\xE9tudiant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Chargement en cours...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 23\n      }, this), !isLoading && authStatus.isValid && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"student-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pr\\xE9nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredStudents.length > 0 ? filteredStudents.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.nom || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.prenom || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.email || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-edit\",\n                onClick: () => handleEditStudent(student.id),\n                children: \"Modifier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete\",\n                onClick: () => handleDeleteStudent(student.id),\n                children: \"Supprimer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              className: \"no-data\",\n              children: \"Aucun \\xE9tudiant trouv\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: newStudent.id ? 'Modifier l\\'étudiant' : 'Ajouter un étudiant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-close\",\n              onClick: handleCloseModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nom\",\n                children: \"Nom*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"nom\",\n                type: \"text\",\n                placeholder: \"Nom\",\n                value: newStudent.nom,\n                onChange: e => setNewStudent({\n                  ...newStudent,\n                  nom: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prenom\",\n                children: \"Pr\\xE9nom*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"prenom\",\n                type: \"text\",\n                placeholder: \"Pr\\xE9nom\",\n                value: newStudent.prenom,\n                onChange: e => setNewStudent({\n                  ...newStudent,\n                  prenom: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"email\",\n                type: \"email\",\n                placeholder: \"Email\",\n                value: newStudent.email,\n                onChange: e => setNewStudent({\n                  ...newStudent,\n                  email: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: newStudent.id ? 'Nouveau mot de passe (laisser vide si inchangé)' : 'Mot de passe*'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"password\",\n                type: \"password\",\n                placeholder: \"Mot de passe\",\n                value: newStudent.motDePasse,\n                onChange: e => setNewStudent({\n                  ...newStudent,\n                  motDePasse: e.target.value\n                }),\n                required: !newStudent.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: handleCloseModal,\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-save\",\n              onClick: handleSaveStudent,\n              disabled: isLoading,\n              children: isLoading ? 'Enregistrement...' : newStudent.id ? 'Mettre à jour' : 'Créer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"CdhJObH820meDFlDzpJGlv/gv9s=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","Layout","jsxDEV","_jsxDEV","UserManagement","_s","students","setStudents","newStudent","setNewStudent","nom","prenom","email","motDePasse","searchTerm","setSearchTerm","isLoading","setIsLoading","error","setError","isModalOpen","setIsModalOpen","successMessage","setSuccessMessage","authStatus","setAuthStatus","token","isValid","message","checkAuth","localStorage","getItem","console","log","startsWith","warn","fetchStudents","substring","config","headers","response","get","status","data","setTimeout","err","statusCode","responseBody","removeItem","statusText","request","handleDeleteStudent","id","window","confirm","delete","filter","student","handleApiError","context","handleEditStudent","studentToEdit","find","handleSaveStudent","studentToUpdate","put","map","post","role","filteredStudents","fullName","toLowerCase","includes","handleCloseModal","handleLogin","location","href","title","userRole","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","length","colSpan","htmlFor","required","_c","$RefreshReg$"],"sources":["C:/Users/ELHAMRI/Desktop/EMSI/S2/Projet/QGen/frontend/src/components/admin/UserManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Layout from '../common/Layout';\r\nimport './UserManagement.css';\r\n\r\nconst UserManagement = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [newStudent, setNewStudent] = useState({ \r\n    nom: '', \r\n    prenom: '', \r\n    email: '', \r\n    motDePasse: '' \r\n  });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [authStatus, setAuthStatus] = useState({\r\n    token: null,\r\n    isValid: false,\r\n    message: \"Vérification du token...\"\r\n  });\r\n\r\n  // Vérifier l'état d'authentification\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Fonction pour vérifier l'état d'authentification\r\n  const checkAuth = () => {\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"Token trouvé:\", token ? \"Oui\" : \"Non\");\r\n    \r\n    if (!token) {\r\n      setAuthStatus({\r\n        token: null,\r\n        isValid: false,\r\n        message: \"Aucun token trouvé. Veuillez vous connecter.\"\r\n      });\r\n      return null;\r\n    }\r\n    \r\n    // Pour tester si le token est au format attendu\r\n    if (!token.startsWith(\"ey\")) {\r\n      console.warn(\"Le token ne semble pas être au format JWT (ne commence pas par 'ey')\");\r\n    }\r\n    \r\n    setAuthStatus({\r\n      token: token,\r\n      isValid: true,\r\n      message: \"Token trouvé\"\r\n    });\r\n    \r\n    return token;\r\n  };\r\n\r\n  // Charger les étudiants depuis l'API\r\n  useEffect(() => {\r\n    if (authStatus.isValid) {\r\n      fetchStudents();\r\n    }\r\n  }, [authStatus.isValid]);\r\n\r\n  // Fonction pour récupérer tous les étudiants\r\n  const fetchStudents = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    // Vérifier à nouveau l'authentification\r\n    const token = checkAuth();\r\n    if (!token) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(\"Tentative d'appel API avec token:\", `Bearer ${token.substring(0, 15)}...`);\r\n\r\n      // Définir les headers manuellement pour cette requête\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n\r\n      // Essayez d'appeler directement l'API sans intercepteur\r\n      const response = await axios.get('http://localhost:8080/api/etudiants', config);\r\n      \r\n      console.log(\"Réponse API:\", response.status);\r\n      setStudents(response.data);\r\n      setSuccessMessage(\"Données étudiants chargées avec succès\");\r\n      setTimeout(() => setSuccessMessage(''), 3000);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Erreur détaillée:\", err);\r\n      \r\n      if (err.response) {\r\n        // Si nous recevons une réponse avec une erreur\r\n        const statusCode = err.response.status;\r\n        const responseBody = err.response.data;\r\n        \r\n        console.log({\r\n          status: statusCode,\r\n          data: responseBody,\r\n          headers: err.response.headers\r\n        });\r\n        \r\n        if (statusCode === 403) {\r\n          setError(`Accès refusé (403). Il semble que vous n'ayez pas les permissions nécessaires.`);\r\n        } else if (statusCode === 401) {\r\n          setError(`Authentification invalide (401). Votre session a peut-être expiré.`);\r\n          // Réinitialiser le token\r\n          localStorage.removeItem('token');\r\n          setAuthStatus({\r\n            token: null, \r\n            isValid: false,\r\n            message: \"Token invalide ou expiré. Reconnexion nécessaire.\"\r\n          });\r\n        } else {\r\n          setError(`Erreur: ${statusCode} ${err.response.statusText}`);\r\n        }\r\n      } else if (err.request) {\r\n        // La requête a été envoyée mais pas de réponse\r\n        setError(\"Erreur de connexion: Impossible de joindre le serveur.\");\r\n      } else {\r\n        // Erreur lors de la création de la requête\r\n        setError(`Erreur lors de la requête: ${err.message}`);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Supprimer un étudiant\r\n  const handleDeleteStudent = async (id) => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cet étudiant ?')) {\r\n      try {\r\n        const token = checkAuth();\r\n        if (!token) return;\r\n        \r\n        await axios.delete(`http://localhost:8080/api/etudiants/${id}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        setStudents(students.filter(student => student.id !== id));\r\n        setSuccessMessage('Étudiant supprimé avec succès');\r\n        setTimeout(() => setSuccessMessage(''), 3000);\r\n      } catch (err) {\r\n        handleApiError(err, \"Erreur lors de la suppression\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Gérer les erreurs API\r\n  const handleApiError = (err, context) => {\r\n    console.error(`${context}:`, err);\r\n    \r\n    if (err.response) {\r\n      const statusCode = err.response.status;\r\n      \r\n      if (statusCode === 401) {\r\n        setError(\"Session expirée. Veuillez vous reconnecter.\");\r\n        localStorage.removeItem('token');\r\n        setAuthStatus({\r\n          token: null, \r\n          isValid: false,\r\n          message: \"Session expirée\"\r\n        });\r\n      } else {\r\n        setError(`${context}: ${statusCode} ${err.response.statusText}`);\r\n      }\r\n    } else if (err.request) {\r\n      setError(\"Erreur de connexion au serveur\");\r\n    } else {\r\n      setError(`${context}: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  // Ouvrir la modal pour modifier un étudiant\r\n  const handleEditStudent = (id) => {\r\n    const studentToEdit = students.find(student => student.id === id);\r\n    if (studentToEdit) {\r\n      setNewStudent({\r\n        id: studentToEdit.id,\r\n        nom: studentToEdit.nom || '',\r\n        prenom: studentToEdit.prenom || '',\r\n        email: studentToEdit.email || '',\r\n        motDePasse: '' // Ne pas pré-remplir le mot de passe pour des raisons de sécurité\r\n      });\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Créer ou mettre à jour un étudiant\r\nconst handleSaveStudent = async () => {\r\n  // Validation simple\r\n  if (!newStudent.nom || !newStudent.prenom || !newStudent.email) {\r\n    setError('Veuillez remplir tous les champs obligatoires');\r\n    return;\r\n  }\r\n\r\n  setIsLoading(true);\r\n  setError(null);\r\n  \r\n  try {\r\n    const token = checkAuth();\r\n    if (!token) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    \r\n    let response;\r\n    \r\n    if (newStudent.id) {\r\n      // Mise à jour d'un étudiant existant\r\n      const studentToUpdate = {\r\n        nom: newStudent.nom,\r\n        prenom: newStudent.prenom,\r\n        email: newStudent.email\r\n      };\r\n      \r\n      // N'ajouter le mot de passe que s'il est fourni\r\n      if (newStudent.motDePasse) {\r\n        studentToUpdate.motDePasse = newStudent.motDePasse;\r\n      }\r\n      \r\n      console.log(\"Mise à jour étudiant:\", studentToUpdate);\r\n      \r\n      response = await axios.put(\r\n        `http://localhost:8080/api/etudiants/${newStudent.id}`, \r\n        studentToUpdate,\r\n        config\r\n      );\r\n      \r\n      console.log(\"Réponse mise à jour:\", response.data);\r\n      \r\n      // Mettre à jour la liste des étudiants\r\n      setStudents(students.map(student => \r\n        student.id === newStudent.id ? {\r\n          ...student,\r\n          nom: newStudent.nom,\r\n          prenom: newStudent.prenom,\r\n          email: newStudent.email\r\n        } : student\r\n      ));\r\n    } else {\r\n      // Création d'un nouvel étudiant\r\n      response = await axios.post(\r\n        'http://localhost:8080/api/admins/create-user', \r\n        {\r\n          ...newStudent,\r\n          role: 'STUDENT'\r\n        },\r\n        config\r\n      );\r\n      \r\n      // Si on crée un nouvel étudiant, rafraîchir la liste complète\r\n      fetchStudents();\r\n    }\r\n    \r\n    // Réinitialiser le formulaire et fermer la modal\r\n    setNewStudent({ nom: '', prenom: '', email: '', motDePasse: '' });\r\n    setIsModalOpen(false);\r\n    setSuccessMessage(newStudent.id ? 'Étudiant modifié avec succès' : 'Étudiant créé avec succès');\r\n    setTimeout(() => setSuccessMessage(''), 3000);\r\n  } catch (err) {\r\n    handleApiError(err, \"Erreur lors de l'enregistrement\");\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n  // Filtrer les étudiants par nom ou prénom\r\n  const filteredStudents = students.filter(student => {\r\n    const fullName = `${student.nom || ''} ${student.prenom || ''}`.toLowerCase();\r\n    return fullName.includes(searchTerm.toLowerCase()) || \r\n           (student.email && student.email.toLowerCase().includes(searchTerm.toLowerCase()));\r\n  });\r\n\r\n  // Gérer la fermeture de la modal\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setNewStudent({ nom: '', prenom: '', email: '', motDePasse: '' });\r\n    setError(null);\r\n  };\r\n\r\n  // Se connecter (redirection)\r\n  const handleLogin = () => {\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"Gestion des Étudiants\" userRole=\"admin\">\r\n      <div className=\"user-management-container\">\r\n        <h2>Gestion des Étudiants</h2>\r\n        \r\n        {/* État d'authentification */}\r\n        \r\n        \r\n        {/* Message de succès */}\r\n        {successMessage && (\r\n          <div className=\"success-message\">\r\n            {successMessage}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Message d'erreur */}\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Actions et recherche */}\r\n        <div className=\"actions-bar\">\r\n          <div className=\"search-bar\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Rechercher par nom, prénom, email...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n          <button \r\n            className=\"btn-primary\" \r\n            onClick={() => setIsModalOpen(true)}\r\n            disabled={!authStatus.isValid}\r\n          >\r\n            Ajouter un étudiant\r\n          </button>\r\n        </div>\r\n        \r\n        {/* État de chargement */}\r\n        {isLoading && <div className=\"loading\">Chargement en cours...</div>}\r\n        \r\n        {/* Tableau des étudiants */}\r\n        {!isLoading && authStatus.isValid && (\r\n          <table className=\"student-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nom</th>\r\n                <th>Prénom</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredStudents.length > 0 ? (\r\n                filteredStudents.map(student => (\r\n                  <tr key={student.id}>\r\n                    <td>{student.nom || 'N/A'}</td>\r\n                    <td>{student.prenom || 'N/A'}</td>\r\n                    <td>{student.email || 'N/A'}</td>\r\n                    <td className=\"actions\">\r\n                      <button \r\n                        className=\"btn-edit\"\r\n                        onClick={() => handleEditStudent(student.id)}\r\n                      >\r\n                        Modifier\r\n                      </button>\r\n                      <button \r\n                        className=\"btn-delete\"\r\n                        onClick={() => handleDeleteStudent(student.id)}\r\n                      >\r\n                        Supprimer\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"no-data\">\r\n                    Aucun étudiant trouvé\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n        \r\n        {/* Modal pour créer/modifier un étudiant */}\r\n        {isModalOpen && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <h3>{newStudent.id ? 'Modifier l\\'étudiant' : 'Ajouter un étudiant'}</h3>\r\n                <button className=\"btn-close\" onClick={handleCloseModal}>×</button>\r\n              </div>\r\n              \r\n              <div className=\"modal-body\">\r\n                {error && <div className=\"modal-error\">{error}</div>}\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"nom\">Nom*</label>\r\n                  <input\r\n                    id=\"nom\"\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    value={newStudent.nom}\r\n                    onChange={(e) => setNewStudent({ ...newStudent, nom: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"prenom\">Prénom*</label>\r\n                  <input\r\n                    id=\"prenom\"\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    value={newStudent.prenom}\r\n                    onChange={(e) => setNewStudent({ ...newStudent, prenom: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email*</label>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={newStudent.email}\r\n                    onChange={(e) => setNewStudent({ ...newStudent, email: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">\r\n                    {newStudent.id ? 'Nouveau mot de passe (laisser vide si inchangé)' : 'Mot de passe*'}\r\n                  </label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    value={newStudent.motDePasse}\r\n                    onChange={(e) => setNewStudent({ ...newStudent, motDePasse: e.target.value })}\r\n                    required={!newStudent.id}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn-cancel\" onClick={handleCloseModal}>Annuler</button>\r\n                <button \r\n                  className=\"btn-save\" \r\n                  onClick={handleSaveStudent}\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? 'Enregistrement...' : (newStudent.id ? 'Mettre à jour' : 'Créer')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}