{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELHAMRI\\\\Desktop\\\\EMSI\\\\S2\\\\Projet\\\\QGen\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for saved user on load\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function - in real app, this would make an API call\n  const login = (email, password, role) => {\n    // Mock user object - in real implementation, this would come from backend\n    const user = {\n      id: `user-${Math.floor(Math.random() * 1000)}`,\n      email,\n      role,\n      // \"admin\", \"professor\", or \"student\"\n      name: email.split('@')[0]\n    };\n    setCurrentUser(user);\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Register function - in real app, this would make an API call\n  const register = (email, password, role) => {\n    // Similar to login for now\n    const user = {\n      id: `user-${Math.floor(Math.random() * 1000)}`,\n      email,\n      role,\n      name: email.split('@')[0]\n    };\n    setCurrentUser(user);\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  };\n  const value = {\n    currentUser,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","role","user","id","Math","floor","random","name","split","setItem","stringify","logout","removeItem","register","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ELHAMRI/Desktop/EMSI/S2/Projet/QGen/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for saved user on load\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      setCurrentUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function - in real app, this would make an API call\r\n  const login = (email, password, role) => {\r\n    // Mock user object - in real implementation, this would come from backend\r\n    const user = {\r\n      id: `user-${Math.floor(Math.random() * 1000)}`,\r\n      email,\r\n      role, // \"admin\", \"professor\", or \"student\"\r\n      name: email.split('@')[0]\r\n    };\r\n\r\n    setCurrentUser(user);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return user;\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Register function - in real app, this would make an API call\r\n  const register = (email, password, role) => {\r\n    // Similar to login for now\r\n    const user = {\r\n      id: `user-${Math.floor(Math.random() * 1000)}`,\r\n      email,\r\n      role,\r\n      name: email.split('@')[0]\r\n    };\r\n\r\n    setCurrentUser(user);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return user;\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAE,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACbH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IACvC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IACvC;IACA,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAE,QAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;MAC9CP,KAAK;MACLE,IAAI;MAAE;MACNM,IAAI,EAAER,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEDlB,cAAc,CAACY,IAAI,CAAC;IACpBR,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACR,IAAI,CAAC,CAAC;IAClD,OAAOA,IAAI;EACb,CAAC;;EAED;EACA,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBrB,cAAc,CAAC,IAAI,CAAC;IACpBI,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAACd,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAC1C;IACA,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAE,QAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;MAC9CP,KAAK;MACLE,IAAI;MACJM,IAAI,EAAER,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEDlB,cAAc,CAACY,IAAI,CAAC;IACpBR,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACR,IAAI,CAAC,CAAC;IAClD,OAAOA,IAAI;EACb,CAAC;EAED,MAAMY,KAAK,GAAG;IACZzB,WAAW;IACXS,KAAK;IACLa;EACF,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC/B,GAAA,CA5DWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}