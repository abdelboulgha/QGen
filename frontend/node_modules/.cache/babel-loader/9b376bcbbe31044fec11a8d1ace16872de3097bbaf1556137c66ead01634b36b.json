{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELHAMRI\\\\Desktop\\\\EMSI\\\\S2\\\\Projet\\\\QGen\\\\frontend\\\\src\\\\components\\\\student\\\\QuizTaking.jsx\",\n  _s = $RefreshSig$();\n// components/student/QuizTaking.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizTaking = () => {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [quiz, setQuiz] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  const [results, setResults] = useState(null);\n  const [confirmEndModal, setConfirmEndModal] = useState(false);\n\n  // Fetch quiz data\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 800));\n\n        // Mock quiz data\n        const mockQuiz = {\n          id: quizId,\n          title: 'Introduction à JavaScript',\n          description: 'Les bases du langage JavaScript pour les débutants',\n          timeLimit: 30,\n          // minutes\n          createdBy: 'Prof. Dupont',\n          questions: [{\n            id: 'q1',\n            text: 'Quelle est la syntaxe correcte pour faire référence à un script externe appelé \"script.js\"?',\n            type: 'multiple_choice',\n            points: 1,\n            options: [{\n              id: 'o1',\n              text: '<script href=\"script.js\">',\n              isCorrect: false\n            }, {\n              id: 'o2',\n              text: '<script name=\"script.js\">',\n              isCorrect: false\n            }, {\n              id: 'o3',\n              text: '<script src=\"script.js\">',\n              isCorrect: true\n            }, {\n              id: 'o4',\n              text: '<script file=\"script.js\">',\n              isCorrect: false\n            }]\n          }, {\n            id: 'q2',\n            text: 'Comment écrire \"Hello World\" dans une boîte d\\'alerte?',\n            type: 'multiple_choice',\n            points: 1,\n            options: [{\n              id: 'o1',\n              text: 'msgBox(\"Hello World\");',\n              isCorrect: false\n            }, {\n              id: 'o2',\n              text: 'alertBox(\"Hello World\");',\n              isCorrect: false\n            }, {\n              id: 'o3',\n              text: 'msg(\"Hello World\");',\n              isCorrect: false\n            }, {\n              id: 'o4',\n              text: 'alert(\"Hello World\");',\n              isCorrect: true\n            }]\n          }, {\n            id: 'q3',\n            text: 'Comment créer une fonction en JavaScript?',\n            type: 'multiple_choice',\n            points: 1,\n            options: [{\n              id: 'o1',\n              text: 'function = myFunction() {}',\n              isCorrect: false\n            }, {\n              id: 'o2',\n              text: 'function myFunction() {}',\n              isCorrect: true\n            }, {\n              id: 'o3',\n              text: 'function:myFunction() {}',\n              isCorrect: false\n            }, {\n              id: 'o4',\n              text: 'function.myFunction() {}',\n              isCorrect: false\n            }]\n          }, {\n            id: 'q4',\n            text: 'Comment appeler une fonction nommée \"myFunction\"?',\n            type: 'multiple_choice',\n            points: 1,\n            options: [{\n              id: 'o1',\n              text: 'call myFunction()',\n              isCorrect: false\n            }, {\n              id: 'o2',\n              text: 'call function myFunction()',\n              isCorrect: false\n            }, {\n              id: 'o3',\n              text: 'myFunction()',\n              isCorrect: true\n            }, {\n              id: 'o4',\n              text: 'execute myFunction()',\n              isCorrect: false\n            }]\n          }, {\n            id: 'q5',\n            text: 'Quelles sont les méthodes de tableau en JavaScript? (plusieurs réponses possibles)',\n            type: 'checkbox',\n            points: 2,\n            options: [{\n              id: 'o1',\n              text: 'push()',\n              isCorrect: true\n            }, {\n              id: 'o2',\n              text: 'pull()',\n              isCorrect: false\n            }, {\n              id: 'o3',\n              text: 'pop()',\n              isCorrect: true\n            }, {\n              id: 'o4',\n              text: 'shift()',\n              isCorrect: true\n            }, {\n              id: 'o5',\n              text: 'replace()',\n              isCorrect: false\n            }]\n          }]\n        };\n        setQuiz(mockQuiz);\n        setQuestions(mockQuiz.questions);\n        setTimeLeft(mockQuiz.timeLimit * 60); // Convert minutes to seconds\n        setLoading(false);\n\n        // Initialize answers object\n        const initialAnswers = {};\n        mockQuiz.questions.forEach(question => {\n          initialAnswers[question.id] = question.type === 'multiple_choice' ? null : [];\n        });\n        setAnswers(initialAnswers);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error);\n        // Handle error appropriately\n      }\n    };\n    fetchQuiz();\n  }, [quizId]);\n\n  // Timer effect\n  useEffect(() => {\n    if (!quizStarted || quizSubmitted || timeLeft <= 0) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          // Auto submit when time runs out\n          handleSubmitQuiz();\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [quizStarted, quizSubmitted, timeLeft]);\n\n  // Format time as mm:ss\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Handle starting the quiz\n  const handleStartQuiz = () => {\n    setQuizStarted(true);\n  };\n\n  // Handle answer selection for multiple choice\n  const handleSelectAnswer = (questionId, optionId) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: optionId\n    }));\n  };\n\n  // Handle answer selection for checkbox (multiple answers)\n  const handleCheckboxAnswer = (questionId, optionId, isChecked) => {\n    setAnswers(prev => {\n      const currentAnswers = [...(prev[questionId] || [])];\n      if (isChecked) {\n        // Add the option if checked\n        return {\n          ...prev,\n          [questionId]: [...currentAnswers, optionId]\n        };\n      } else {\n        // Remove the option if unchecked\n        return {\n          ...prev,\n          [questionId]: currentAnswers.filter(id => id !== optionId)\n        };\n      }\n    });\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  // Move to previous question\n  const prevQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Jump to specific question\n  const jumpToQuestion = index => {\n    setCurrentQuestionIndex(index);\n  };\n\n  // Check if question is answered\n  const isQuestionAnswered = questionId => {\n    const answer = answers[questionId];\n    if (Array.isArray(answer)) {\n      return answer.length > 0;\n    }\n    return answer !== null;\n  };\n\n  // Open confirm end modal\n  const openConfirmEndModal = () => {\n    setConfirmEndModal(true);\n  };\n\n  // Close confirm end modal\n  const closeConfirmEndModal = () => {\n    setConfirmEndModal(false);\n  };\n\n  // Submit quiz\n  const handleSubmitQuiz = async () => {\n    setConfirmEndModal(false);\n\n    // Calculate results\n    let totalPoints = 0;\n    let earnedPoints = 0;\n    let correctAnswers = 0;\n    const questionResults = questions.map(question => {\n      totalPoints += question.points;\n      let isCorrect = false;\n      if (question.type === 'multiple_choice') {\n        const selectedOption = question.options.find(opt => opt.id === answers[question.id]);\n        isCorrect = (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.isCorrect) || false;\n      } else if (question.type === 'checkbox') {\n        // For checkbox, all correct options must be selected and no incorrect ones\n        const selectedOptions = answers[question.id] || [];\n        const correctOptionIds = question.options.filter(opt => opt.isCorrect).map(opt => opt.id);\n        const incorrectSelections = selectedOptions.filter(id => !correctOptionIds.includes(id));\n        const missingCorrectSelections = correctOptionIds.filter(id => !selectedOptions.includes(id));\n        isCorrect = incorrectSelections.length === 0 && missingCorrectSelections.length === 0 && selectedOptions.length > 0;\n      }\n      if (isCorrect) {\n        earnedPoints += question.points;\n        correctAnswers++;\n      }\n      return {\n        questionId: question.id,\n        isCorrect,\n        points: isCorrect ? question.points : 0\n      };\n    });\n    const scorePercentage = Math.round(earnedPoints / totalPoints * 100);\n\n    // Mock result data\n    const mockResults = {\n      quizId,\n      studentId: currentUser.id,\n      studentName: currentUser.name,\n      submittedAt: new Date().toISOString(),\n      score: scorePercentage,\n      totalPoints,\n      earnedPoints,\n      correctAnswers,\n      totalQuestions: questions.length,\n      timeSpent: quiz.timeLimit * 60 - timeLeft,\n      questionResults\n    };\n\n    // Simulate sending results to server\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setResults(mockResults);\n    setQuizSubmitted(true);\n  };\n\n  // Navigate to results view\n  const viewDetailedResults = () => {\n    navigate(`/student/results/${quizId}`);\n  };\n\n  // Return to dashboard\n  const returnToDashboard = () => {\n    navigate('/student');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Chargement du quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show results after submission\n  if (quizSubmitted && results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz termin\\xE9!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Votre score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"score\",\n              children: [results.score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Vous avez obtenu \", results.earnedPoints, \" points sur un total de \", results.totalPoints, \" points.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"R\\xE9ponses correctes: \", results.correctAnswers, \" sur \", results.totalQuestions, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temps utilis\\xE9: \", formatTime(results.timeSpent)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: viewDetailedResults,\n            children: \"Voir les r\\xE9sultats d\\xE9taill\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: returnToDashboard,\n            children: \"Retour au tableau de bord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Quiz start screen\n  if (!quizStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-description\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: quiz.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Temps limite:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [quiz.timeLimit, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Questions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: questions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Cr\\xE9\\xE9 par:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: quiz.createdBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"R\\xE9pondez \\xE0 toutes les questions avant de soumettre le quiz.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Vous pouvez naviguer entre les questions en utilisant les boutons Pr\\xE9c\\xE9dent et Suivant.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Le quiz sera automatiquement soumis lorsque le temps sera \\xE9coul\\xE9.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ne rafra\\xEEchissez pas la page pendant le quiz, cela pourrait entra\\xEEner la perte de vos r\\xE9ponses.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg\",\n          onClick: handleStartQuiz,\n          children: \"Commencer le Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Quiz in progress\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-area quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-timer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: timeLeft < 60 ? 'time-warning' : '',\n          children: [\"Temps restant: \", formatTime(timeLeft)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${Object.values(answers).filter(a => a !== null && (!Array.isArray(a) || a.length > 0)).length / questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [\"Question \", currentQuestionIndex + 1, \" sur \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-buttons\",\n            children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `question-button ${currentQuestionIndex === index ? 'active' : ''} ${isQuestionAnswered(q.id) ? 'answered' : ''}`,\n              onClick: () => jumpToQuestion(index),\n              children: index + 1\n            }, q.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question-text\",\n            children: currentQuestion.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-list\",\n            children: currentQuestion.type === 'multiple_choice' ?\n            // Multiple choice (radio buttons)\n            currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option-item ${answers[currentQuestion.id] === option.id ? 'selected' : ''}`,\n              onClick: () => handleSelectAnswer(currentQuestion.id, option.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-radio\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"radio-inner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this)) :\n            // Checkbox (multiple selection)\n            currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option-item checkbox ${(answers[currentQuestion.id] || []).includes(option.id) ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-checkbox\",\n                onClick: () => handleCheckboxAnswer(currentQuestion.id, option.id, !(answers[currentQuestion.id] || []).includes(option.id)),\n                children: (answers[currentQuestion.id] || []).includes(option.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox-inner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: prevQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Pr\\xE9c\\xE9dent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: nextQuestion,\n            children: \"Suivant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: openConfirmEndModal,\n            children: \"Terminer le Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), confirmEndModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Terminer le Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xCAtes-vous s\\xFBr de vouloir terminer et soumettre ce quiz?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: closeConfirmEndModal,\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSubmitQuiz,\n            children: \"Terminer et Soumettre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizTaking, \"KQLgw/aYzofLv3CNfDd0CX7iOLg=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = QuizTaking;\nexport default QuizTaking;\nvar _c;\n$RefreshReg$(_c, \"QuizTaking\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","jsxDEV","_jsxDEV","QuizTaking","_s","quizId","navigate","currentUser","loading","setLoading","quiz","setQuiz","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","timeLeft","setTimeLeft","quizStarted","setQuizStarted","quizSubmitted","setQuizSubmitted","results","setResults","confirmEndModal","setConfirmEndModal","fetchQuiz","Promise","resolve","setTimeout","mockQuiz","id","title","description","timeLimit","createdBy","text","type","points","options","isCorrect","initialAnswers","forEach","question","error","console","timer","setInterval","prevTime","clearInterval","handleSubmitQuiz","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","handleStartQuiz","handleSelectAnswer","questionId","optionId","prev","handleCheckboxAnswer","isChecked","currentAnswers","filter","nextQuestion","length","prevQuestion","jumpToQuestion","index","isQuestionAnswered","answer","Array","isArray","openConfirmEndModal","closeConfirmEndModal","totalPoints","earnedPoints","correctAnswers","questionResults","map","selectedOption","find","opt","selectedOptions","correctOptionIds","incorrectSelections","includes","missingCorrectSelections","scorePercentage","round","mockResults","studentId","studentName","name","submittedAt","Date","toISOString","score","totalQuestions","timeSpent","viewDetailedResults","returnToDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentQuestion","style","width","Object","values","a","q","option","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ELHAMRI/Desktop/EMSI/S2/Projet/QGen/frontend/src/components/student/QuizTaking.jsx"],"sourcesContent":["// components/student/QuizTaking.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst QuizTaking = () => {\r\n  const { quizId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [confirmEndModal, setConfirmEndModal] = useState(false);\r\n\r\n  // Fetch quiz data\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        // Simulate API call\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Mock quiz data\r\n        const mockQuiz = {\r\n          id: quizId,\r\n          title: 'Introduction à JavaScript',\r\n          description: 'Les bases du langage JavaScript pour les débutants',\r\n          timeLimit: 30, // minutes\r\n          createdBy: 'Prof. Dupont',\r\n          questions: [\r\n            {\r\n              id: 'q1',\r\n              text: 'Quelle est la syntaxe correcte pour faire référence à un script externe appelé \"script.js\"?',\r\n              type: 'multiple_choice',\r\n              points: 1,\r\n              options: [\r\n                { id: 'o1', text: '<script href=\"script.js\">', isCorrect: false },\r\n                { id: 'o2', text: '<script name=\"script.js\">', isCorrect: false },\r\n                { id: 'o3', text: '<script src=\"script.js\">', isCorrect: true },\r\n                { id: 'o4', text: '<script file=\"script.js\">', isCorrect: false }\r\n              ]\r\n            },\r\n            {\r\n              id: 'q2',\r\n              text: 'Comment écrire \"Hello World\" dans une boîte d\\'alerte?',\r\n              type: 'multiple_choice',\r\n              points: 1,\r\n              options: [\r\n                { id: 'o1', text: 'msgBox(\"Hello World\");', isCorrect: false },\r\n                { id: 'o2', text: 'alertBox(\"Hello World\");', isCorrect: false },\r\n                { id: 'o3', text: 'msg(\"Hello World\");', isCorrect: false },\r\n                { id: 'o4', text: 'alert(\"Hello World\");', isCorrect: true }\r\n              ]\r\n            },\r\n            {\r\n              id: 'q3',\r\n              text: 'Comment créer une fonction en JavaScript?',\r\n              type: 'multiple_choice',\r\n              points: 1,\r\n              options: [\r\n                { id: 'o1', text: 'function = myFunction() {}', isCorrect: false },\r\n                { id: 'o2', text: 'function myFunction() {}', isCorrect: true },\r\n                { id: 'o3', text: 'function:myFunction() {}', isCorrect: false },\r\n                { id: 'o4', text: 'function.myFunction() {}', isCorrect: false }\r\n              ]\r\n            },\r\n            {\r\n              id: 'q4',\r\n              text: 'Comment appeler une fonction nommée \"myFunction\"?',\r\n              type: 'multiple_choice',\r\n              points: 1,\r\n              options: [\r\n                { id: 'o1', text: 'call myFunction()', isCorrect: false },\r\n                { id: 'o2', text: 'call function myFunction()', isCorrect: false },\r\n                { id: 'o3', text: 'myFunction()', isCorrect: true },\r\n                { id: 'o4', text: 'execute myFunction()', isCorrect: false }\r\n              ]\r\n            },\r\n            {\r\n              id: 'q5',\r\n              text: 'Quelles sont les méthodes de tableau en JavaScript? (plusieurs réponses possibles)',\r\n              type: 'checkbox',\r\n              points: 2,\r\n              options: [\r\n                { id: 'o1', text: 'push()', isCorrect: true },\r\n                { id: 'o2', text: 'pull()', isCorrect: false },\r\n                { id: 'o3', text: 'pop()', isCorrect: true },\r\n                { id: 'o4', text: 'shift()', isCorrect: true },\r\n                { id: 'o5', text: 'replace()', isCorrect: false }\r\n              ]\r\n            }\r\n          ]\r\n        };\r\n        \r\n        setQuiz(mockQuiz);\r\n        setQuestions(mockQuiz.questions);\r\n        setTimeLeft(mockQuiz.timeLimit * 60); // Convert minutes to seconds\r\n        setLoading(false);\r\n        \r\n        // Initialize answers object\r\n        const initialAnswers = {};\r\n        mockQuiz.questions.forEach(question => {\r\n          initialAnswers[question.id] = question.type === 'multiple_choice' ? null : [];\r\n        });\r\n        setAnswers(initialAnswers);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error fetching quiz:\", error);\r\n        // Handle error appropriately\r\n      }\r\n    };\r\n    \r\n    fetchQuiz();\r\n  }, [quizId]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (!quizStarted || quizSubmitted || timeLeft <= 0) return;\r\n    \r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTime => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          // Auto submit when time runs out\r\n          handleSubmitQuiz();\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [quizStarted, quizSubmitted, timeLeft]);\r\n\r\n  // Format time as mm:ss\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Handle starting the quiz\r\n  const handleStartQuiz = () => {\r\n    setQuizStarted(true);\r\n  };\r\n\r\n  // Handle answer selection for multiple choice\r\n  const handleSelectAnswer = (questionId, optionId) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: optionId\r\n    }));\r\n  };\r\n\r\n  // Handle answer selection for checkbox (multiple answers)\r\n  const handleCheckboxAnswer = (questionId, optionId, isChecked) => {\r\n    setAnswers(prev => {\r\n      const currentAnswers = [...(prev[questionId] || [])];\r\n      \r\n      if (isChecked) {\r\n        // Add the option if checked\r\n        return {\r\n          ...prev,\r\n          [questionId]: [...currentAnswers, optionId]\r\n        };\r\n      } else {\r\n        // Remove the option if unchecked\r\n        return {\r\n          ...prev,\r\n          [questionId]: currentAnswers.filter(id => id !== optionId)\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  // Move to next question\r\n  const nextQuestion = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  // Move to previous question\r\n  const prevQuestion = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  // Jump to specific question\r\n  const jumpToQuestion = (index) => {\r\n    setCurrentQuestionIndex(index);\r\n  };\r\n\r\n  // Check if question is answered\r\n  const isQuestionAnswered = (questionId) => {\r\n    const answer = answers[questionId];\r\n    if (Array.isArray(answer)) {\r\n      return answer.length > 0;\r\n    }\r\n    return answer !== null;\r\n  };\r\n\r\n  // Open confirm end modal\r\n  const openConfirmEndModal = () => {\r\n    setConfirmEndModal(true);\r\n  };\r\n\r\n  // Close confirm end modal\r\n  const closeConfirmEndModal = () => {\r\n    setConfirmEndModal(false);\r\n  };\r\n\r\n  // Submit quiz\r\n  const handleSubmitQuiz = async () => {\r\n    setConfirmEndModal(false);\r\n    \r\n    // Calculate results\r\n    let totalPoints = 0;\r\n    let earnedPoints = 0;\r\n    let correctAnswers = 0;\r\n    \r\n    const questionResults = questions.map(question => {\r\n      totalPoints += question.points;\r\n      let isCorrect = false;\r\n      \r\n      if (question.type === 'multiple_choice') {\r\n        const selectedOption = question.options.find(opt => opt.id === answers[question.id]);\r\n        isCorrect = selectedOption?.isCorrect || false;\r\n      } else if (question.type === 'checkbox') {\r\n        // For checkbox, all correct options must be selected and no incorrect ones\r\n        const selectedOptions = answers[question.id] || [];\r\n        const correctOptionIds = question.options.filter(opt => opt.isCorrect).map(opt => opt.id);\r\n        const incorrectSelections = selectedOptions.filter(id => !correctOptionIds.includes(id));\r\n        const missingCorrectSelections = correctOptionIds.filter(id => !selectedOptions.includes(id));\r\n        \r\n        isCorrect = incorrectSelections.length === 0 && missingCorrectSelections.length === 0 && selectedOptions.length > 0;\r\n      }\r\n      \r\n      if (isCorrect) {\r\n        earnedPoints += question.points;\r\n        correctAnswers++;\r\n      }\r\n      \r\n      return {\r\n        questionId: question.id,\r\n        isCorrect,\r\n        points: isCorrect ? question.points : 0\r\n      };\r\n    });\r\n    \r\n    const scorePercentage = Math.round((earnedPoints / totalPoints) * 100);\r\n    \r\n    // Mock result data\r\n    const mockResults = {\r\n      quizId,\r\n      studentId: currentUser.id,\r\n      studentName: currentUser.name,\r\n      submittedAt: new Date().toISOString(),\r\n      score: scorePercentage,\r\n      totalPoints,\r\n      earnedPoints,\r\n      correctAnswers,\r\n      totalQuestions: questions.length,\r\n      timeSpent: quiz.timeLimit * 60 - timeLeft,\r\n      questionResults\r\n    };\r\n    \r\n    // Simulate sending results to server\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    setResults(mockResults);\r\n    setQuizSubmitted(true);\r\n  };\r\n\r\n  // Navigate to results view\r\n  const viewDetailedResults = () => {\r\n    navigate(`/student/results/${quizId}`);\r\n  };\r\n\r\n  // Return to dashboard\r\n  const returnToDashboard = () => {\r\n    navigate('/student');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement du quiz...</div>;\r\n  }\r\n\r\n  // Show results after submission\r\n  if (quizSubmitted && results) {\r\n    return (\r\n      <div className=\"content-area\">\r\n        <div className=\"quiz-results\">\r\n          <h1>Quiz terminé!</h1>\r\n          \r\n          <div className=\"result-summary\">\r\n            <h2>Votre score: <span className=\"score\">{results.score}%</span></h2>\r\n            <p>Vous avez obtenu {results.earnedPoints} points sur un total de {results.totalPoints} points.</p>\r\n            <p>Réponses correctes: {results.correctAnswers} sur {results.totalQuestions} questions</p>\r\n            <p>Temps utilisé: {formatTime(results.timeSpent)}</p>\r\n          </div>\r\n          \r\n          <div className=\"result-actions\">\r\n            <button className=\"btn btn-primary\" onClick={viewDetailedResults}>\r\n              Voir les résultats détaillés\r\n            </button>\r\n            <button className=\"btn btn-secondary\" onClick={returnToDashboard}>\r\n              Retour au tableau de bord\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Quiz start screen\r\n  if (!quizStarted) {\r\n    return (\r\n      <div className=\"content-area\">\r\n        <div className=\"quiz-intro\">\r\n          <h1>{quiz.title}</h1>\r\n          <div className=\"quiz-description\">\r\n            <p>{quiz.description}</p>\r\n          </div>\r\n          \r\n          <div className=\"quiz-info\">\r\n            <div className=\"info-item\">\r\n              <span className=\"label\">Temps limite:</span>\r\n              <span className=\"value\">{quiz.timeLimit} minutes</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <span className=\"label\">Questions:</span>\r\n              <span className=\"value\">{questions.length}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <span className=\"label\">Créé par:</span>\r\n              <span className=\"value\">{quiz.createdBy}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"quiz-instructions\">\r\n            <h3>Instructions:</h3>\r\n            <ul>\r\n              <li>Répondez à toutes les questions avant de soumettre le quiz.</li>\r\n              <li>Vous pouvez naviguer entre les questions en utilisant les boutons Précédent et Suivant.</li>\r\n              <li>Le quiz sera automatiquement soumis lorsque le temps sera écoulé.</li>\r\n              <li>Ne rafraîchissez pas la page pendant le quiz, cela pourrait entraîner la perte de vos réponses.</li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <button className=\"btn btn-primary btn-lg\" onClick={handleStartQuiz}>\r\n            Commencer le Quiz\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Quiz in progress\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"content-area quiz-container\">\r\n      <div className=\"quiz-header\">\r\n        <h1>{quiz.title}</h1>\r\n        <div className=\"quiz-timer\">\r\n          <span className={timeLeft < 60 ? 'time-warning' : ''}>\r\n            Temps restant: {formatTime(timeLeft)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"quiz-progress\">\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress-fill\" \r\n            style={{ width: `${Object.values(answers).filter(a => a !== null && (!Array.isArray(a) || a.length > 0)).length / questions.length * 100}%` }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"progress-text\">\r\n          Question {currentQuestionIndex + 1} sur {questions.length}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-sidebar\">\r\n          <div className=\"question-navigation\">\r\n            <h3>Questions</h3>\r\n            <div className=\"question-buttons\">\r\n              {questions.map((q, index) => (\r\n                <button\r\n                  key={q.id}\r\n                  className={`question-button ${currentQuestionIndex === index ? 'active' : ''} ${isQuestionAnswered(q.id) ? 'answered' : ''}`}\r\n                  onClick={() => jumpToQuestion(index)}\r\n                >\r\n                  {index + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"question-main\">\r\n          <div className=\"question-content\">\r\n            <h2 className=\"question-text\">{currentQuestion.text}</h2>\r\n            \r\n            <div className=\"options-list\">\r\n              {currentQuestion.type === 'multiple_choice' ? (\r\n                // Multiple choice (radio buttons)\r\n                currentQuestion.options.map(option => (\r\n                  <div \r\n                    key={option.id} \r\n                    className={`option-item ${answers[currentQuestion.id] === option.id ? 'selected' : ''}`}\r\n                    onClick={() => handleSelectAnswer(currentQuestion.id, option.id)}\r\n                  >\r\n                    <div className=\"option-radio\">\r\n                      <div className=\"radio-inner\"></div>\r\n                    </div>\r\n                    <div className=\"option-text\">{option.text}</div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                // Checkbox (multiple selection)\r\n                currentQuestion.options.map(option => (\r\n                  <div \r\n                    key={option.id} \r\n                    className={`option-item checkbox ${(answers[currentQuestion.id] || []).includes(option.id) ? 'selected' : ''}`}\r\n                  >\r\n                    <div \r\n                      className=\"option-checkbox\"\r\n                      onClick={() => handleCheckboxAnswer(\r\n                        currentQuestion.id, \r\n                        option.id, \r\n                        !(answers[currentQuestion.id] || []).includes(option.id)\r\n                      )}\r\n                    >\r\n                      {(answers[currentQuestion.id] || []).includes(option.id) && (\r\n                        <div className=\"checkbox-inner\"></div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"option-text\">{option.text}</div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"question-actions\">\r\n            <button \r\n              className=\"btn btn-secondary\" \r\n              onClick={prevQuestion}\r\n              disabled={currentQuestionIndex === 0}\r\n            >\r\n              Précédent\r\n            </button>\r\n            \r\n            {currentQuestionIndex < questions.length - 1 ? (\r\n              <button \r\n                className=\"btn btn-primary\" \r\n                onClick={nextQuestion}\r\n              >\r\n                Suivant\r\n              </button>\r\n            ) : (\r\n              <button \r\n                className=\"btn btn-success\" \r\n                onClick={openConfirmEndModal}\r\n              >\r\n                Terminer le Quiz\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Confirmation Modal */}\r\n      {confirmEndModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h2>Terminer le Quiz</h2>\r\n            <p>Êtes-vous sûr de vouloir terminer et soumettre ce quiz?</p>\r\n            <div className=\"modal-actions\">\r\n              <button className=\"btn btn-secondary\" onClick={closeConfirmEndModal}>\r\n                Annuler\r\n              </button>\r\n              <button className=\"btn btn-primary\" onClick={handleSubmitQuiz}>\r\n                Terminer et Soumettre\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizTaking;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,OAAO,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAY,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEjC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;QAEtD;QACA,MAAME,QAAQ,GAAG;UACfC,EAAE,EAAE5B,MAAM;UACV6B,KAAK,EAAE,2BAA2B;UAClCC,WAAW,EAAE,oDAAoD;UACjEC,SAAS,EAAE,EAAE;UAAE;UACfC,SAAS,EAAE,cAAc;UACzBzB,SAAS,EAAE,CACT;YACEqB,EAAE,EAAE,IAAI;YACRK,IAAI,EAAE,6FAA6F;YACnGC,IAAI,EAAE,iBAAiB;YACvBC,MAAM,EAAE,CAAC;YACTC,OAAO,EAAE,CACP;cAAER,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,2BAA2B;cAAEI,SAAS,EAAE;YAAM,CAAC,EACjE;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,2BAA2B;cAAEI,SAAS,EAAE;YAAM,CAAC,EACjE;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,0BAA0B;cAAEI,SAAS,EAAE;YAAK,CAAC,EAC/D;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,2BAA2B;cAAEI,SAAS,EAAE;YAAM,CAAC;UAErE,CAAC,EACD;YACET,EAAE,EAAE,IAAI;YACRK,IAAI,EAAE,wDAAwD;YAC9DC,IAAI,EAAE,iBAAiB;YACvBC,MAAM,EAAE,CAAC;YACTC,OAAO,EAAE,CACP;cAAER,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,wBAAwB;cAAEI,SAAS,EAAE;YAAM,CAAC,EAC9D;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,0BAA0B;cAAEI,SAAS,EAAE;YAAM,CAAC,EAChE;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,qBAAqB;cAAEI,SAAS,EAAE;YAAM,CAAC,EAC3D;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,uBAAuB;cAAEI,SAAS,EAAE;YAAK,CAAC;UAEhE,CAAC,EACD;YACET,EAAE,EAAE,IAAI;YACRK,IAAI,EAAE,2CAA2C;YACjDC,IAAI,EAAE,iBAAiB;YACvBC,MAAM,EAAE,CAAC;YACTC,OAAO,EAAE,CACP;cAAER,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,4BAA4B;cAAEI,SAAS,EAAE;YAAM,CAAC,EAClE;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,0BAA0B;cAAEI,SAAS,EAAE;YAAK,CAAC,EAC/D;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,0BAA0B;cAAEI,SAAS,EAAE;YAAM,CAAC,EAChE;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,0BAA0B;cAAEI,SAAS,EAAE;YAAM,CAAC;UAEpE,CAAC,EACD;YACET,EAAE,EAAE,IAAI;YACRK,IAAI,EAAE,mDAAmD;YACzDC,IAAI,EAAE,iBAAiB;YACvBC,MAAM,EAAE,CAAC;YACTC,OAAO,EAAE,CACP;cAAER,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,mBAAmB;cAAEI,SAAS,EAAE;YAAM,CAAC,EACzD;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,4BAA4B;cAAEI,SAAS,EAAE;YAAM,CAAC,EAClE;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,cAAc;cAAEI,SAAS,EAAE;YAAK,CAAC,EACnD;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,sBAAsB;cAAEI,SAAS,EAAE;YAAM,CAAC;UAEhE,CAAC,EACD;YACET,EAAE,EAAE,IAAI;YACRK,IAAI,EAAE,oFAAoF;YAC1FC,IAAI,EAAE,UAAU;YAChBC,MAAM,EAAE,CAAC;YACTC,OAAO,EAAE,CACP;cAAER,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,QAAQ;cAAEI,SAAS,EAAE;YAAK,CAAC,EAC7C;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,QAAQ;cAAEI,SAAS,EAAE;YAAM,CAAC,EAC9C;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,OAAO;cAAEI,SAAS,EAAE;YAAK,CAAC,EAC5C;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,SAAS;cAAEI,SAAS,EAAE;YAAK,CAAC,EAC9C;cAAET,EAAE,EAAE,IAAI;cAAEK,IAAI,EAAE,WAAW;cAAEI,SAAS,EAAE;YAAM,CAAC;UAErD,CAAC;QAEL,CAAC;QAED/B,OAAO,CAACqB,QAAQ,CAAC;QACjBnB,YAAY,CAACmB,QAAQ,CAACpB,SAAS,CAAC;QAChCO,WAAW,CAACa,QAAQ,CAACI,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;QACtC3B,UAAU,CAAC,KAAK,CAAC;;QAEjB;QACA,MAAMkC,cAAc,GAAG,CAAC,CAAC;QACzBX,QAAQ,CAACpB,SAAS,CAACgC,OAAO,CAACC,QAAQ,IAAI;UACrCF,cAAc,CAACE,QAAQ,CAACZ,EAAE,CAAC,GAAGY,QAAQ,CAACN,IAAI,KAAK,iBAAiB,GAAG,IAAI,GAAG,EAAE;QAC/E,CAAC,CAAC;QACFtB,UAAU,CAAC0B,cAAc,CAAC;MAE5B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF;IACF,CAAC;IAEDlB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;;EAEZ;EACAR,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,WAAW,IAAIE,aAAa,IAAIJ,QAAQ,IAAI,CAAC,EAAE;IAEpD,MAAM8B,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B9B,WAAW,CAAC+B,QAAQ,IAAI;QACtB,IAAIA,QAAQ,IAAI,CAAC,EAAE;UACjBC,aAAa,CAACH,KAAK,CAAC;UACpB;UACAI,gBAAgB,CAAC,CAAC;UAClB,OAAO,CAAC;QACV;QACA,OAAOF,QAAQ,GAAG,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAAC5B,WAAW,EAAEE,aAAa,EAAEJ,QAAQ,CAAC,CAAC;;EAE1C;EACA,MAAMmC,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;IACrC,OAAO,GAAGC,OAAO,IAAIG,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACrE,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BxC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMyC,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;IACnD/C,UAAU,CAACgD,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAGA,CAACH,UAAU,EAAEC,QAAQ,EAAEG,SAAS,KAAK;IAChElD,UAAU,CAACgD,IAAI,IAAI;MACjB,MAAMG,cAAc,GAAG,CAAC,IAAIH,IAAI,CAACF,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;MAEpD,IAAII,SAAS,EAAE;QACb;QACA,OAAO;UACL,GAAGF,IAAI;UACP,CAACF,UAAU,GAAG,CAAC,GAAGK,cAAc,EAAEJ,QAAQ;QAC5C,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO;UACL,GAAGC,IAAI;UACP,CAACF,UAAU,GAAGK,cAAc,CAACC,MAAM,CAACpC,EAAE,IAAIA,EAAE,KAAK+B,QAAQ;QAC3D,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIxD,oBAAoB,GAAGF,SAAS,CAAC2D,MAAM,GAAG,CAAC,EAAE;MAC/CxD,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAM0D,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI1D,oBAAoB,GAAG,CAAC,EAAE;MAC5BC,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAM2D,cAAc,GAAIC,KAAK,IAAK;IAChC3D,uBAAuB,CAAC2D,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIZ,UAAU,IAAK;IACzC,MAAMa,MAAM,GAAG5D,OAAO,CAAC+C,UAAU,CAAC;IAClC,IAAIc,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;MACzB,OAAOA,MAAM,CAACL,MAAM,GAAG,CAAC;IAC1B;IACA,OAAOK,MAAM,KAAK,IAAI;EACxB,CAAC;;EAED;EACA,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCpD,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMqD,oBAAoB,GAAGA,CAAA,KAAM;IACjCrD,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMyB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCzB,kBAAkB,CAAC,KAAK,CAAC;;IAEzB;IACA,IAAIsD,WAAW,GAAG,CAAC;IACnB,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,cAAc,GAAG,CAAC;IAEtB,MAAMC,eAAe,GAAGxE,SAAS,CAACyE,GAAG,CAACxC,QAAQ,IAAI;MAChDoC,WAAW,IAAIpC,QAAQ,CAACL,MAAM;MAC9B,IAAIE,SAAS,GAAG,KAAK;MAErB,IAAIG,QAAQ,CAACN,IAAI,KAAK,iBAAiB,EAAE;QACvC,MAAM+C,cAAc,GAAGzC,QAAQ,CAACJ,OAAO,CAAC8C,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACvD,EAAE,KAAKjB,OAAO,CAAC6B,QAAQ,CAACZ,EAAE,CAAC,CAAC;QACpFS,SAAS,GAAG,CAAA4C,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE5C,SAAS,KAAI,KAAK;MAChD,CAAC,MAAM,IAAIG,QAAQ,CAACN,IAAI,KAAK,UAAU,EAAE;QACvC;QACA,MAAMkD,eAAe,GAAGzE,OAAO,CAAC6B,QAAQ,CAACZ,EAAE,CAAC,IAAI,EAAE;QAClD,MAAMyD,gBAAgB,GAAG7C,QAAQ,CAACJ,OAAO,CAAC4B,MAAM,CAACmB,GAAG,IAAIA,GAAG,CAAC9C,SAAS,CAAC,CAAC2C,GAAG,CAACG,GAAG,IAAIA,GAAG,CAACvD,EAAE,CAAC;QACzF,MAAM0D,mBAAmB,GAAGF,eAAe,CAACpB,MAAM,CAACpC,EAAE,IAAI,CAACyD,gBAAgB,CAACE,QAAQ,CAAC3D,EAAE,CAAC,CAAC;QACxF,MAAM4D,wBAAwB,GAAGH,gBAAgB,CAACrB,MAAM,CAACpC,EAAE,IAAI,CAACwD,eAAe,CAACG,QAAQ,CAAC3D,EAAE,CAAC,CAAC;QAE7FS,SAAS,GAAGiD,mBAAmB,CAACpB,MAAM,KAAK,CAAC,IAAIsB,wBAAwB,CAACtB,MAAM,KAAK,CAAC,IAAIkB,eAAe,CAAClB,MAAM,GAAG,CAAC;MACrH;MAEA,IAAI7B,SAAS,EAAE;QACbwC,YAAY,IAAIrC,QAAQ,CAACL,MAAM;QAC/B2C,cAAc,EAAE;MAClB;MAEA,OAAO;QACLpB,UAAU,EAAElB,QAAQ,CAACZ,EAAE;QACvBS,SAAS;QACTF,MAAM,EAAEE,SAAS,GAAGG,QAAQ,CAACL,MAAM,GAAG;MACxC,CAAC;IACH,CAAC,CAAC;IAEF,MAAMsD,eAAe,GAAGtC,IAAI,CAACuC,KAAK,CAAEb,YAAY,GAAGD,WAAW,GAAI,GAAG,CAAC;;IAEtE;IACA,MAAMe,WAAW,GAAG;MAClB3F,MAAM;MACN4F,SAAS,EAAE1F,WAAW,CAAC0B,EAAE;MACzBiE,WAAW,EAAE3F,WAAW,CAAC4F,IAAI;MAC7BC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACrCC,KAAK,EAAET,eAAe;MACtBb,WAAW;MACXC,YAAY;MACZC,cAAc;MACdqB,cAAc,EAAE5F,SAAS,CAAC2D,MAAM;MAChCkC,SAAS,EAAE/F,IAAI,CAAC0B,SAAS,GAAG,EAAE,GAAGlB,QAAQ;MACzCkE;IACF,CAAC;;IAED;IACA,MAAM,IAAIvD,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IAEvDL,UAAU,CAACuE,WAAW,CAAC;IACvBzE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMmF,mBAAmB,GAAGA,CAAA,KAAM;IAChCpG,QAAQ,CAAC,oBAAoBD,MAAM,EAAE,CAAC;EACxC,CAAC;;EAED;EACA,MAAMsG,iBAAiB,GAAGA,CAAA,KAAM;IAC9BrG,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,IAAIE,OAAO,EAAE;IACX,oBAAON,OAAA;MAAK0G,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7D;;EAEA;EACA,IAAI3F,aAAa,IAAIE,OAAO,EAAE;IAC5B,oBACEtB,OAAA;MAAK0G,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B3G,OAAA;QAAK0G,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B3G,OAAA;UAAA2G,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEtB/G,OAAA;UAAK0G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B3G,OAAA;YAAA2G,QAAA,GAAI,eAAa,eAAA3G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,GAAErF,OAAO,CAAC+E,KAAK,EAAC,GAAC;YAAA;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrE/G,OAAA;YAAA2G,QAAA,GAAG,mBAAiB,EAACrF,OAAO,CAAC0D,YAAY,EAAC,0BAAwB,EAAC1D,OAAO,CAACyD,WAAW,EAAC,UAAQ;UAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnG/G,OAAA;YAAA2G,QAAA,GAAG,yBAAoB,EAACrF,OAAO,CAAC2D,cAAc,EAAC,OAAK,EAAC3D,OAAO,CAACgF,cAAc,EAAC,YAAU;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC1F/G,OAAA;YAAA2G,QAAA,GAAG,oBAAe,EAACxD,UAAU,CAAC7B,OAAO,CAACiF,SAAS,CAAC;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eAEN/G,OAAA;UAAK0G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B3G,OAAA;YAAQ0G,SAAS,EAAC,iBAAiB;YAACM,OAAO,EAAER,mBAAoB;YAAAG,QAAA,EAAC;UAElE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT/G,OAAA;YAAQ0G,SAAS,EAAC,mBAAmB;YAACM,OAAO,EAAEP,iBAAkB;YAAAE,QAAA,EAAC;UAElE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAI,CAAC7F,WAAW,EAAE;IAChB,oBACElB,OAAA;MAAK0G,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B3G,OAAA;QAAK0G,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3G,OAAA;UAAA2G,QAAA,EAAKnG,IAAI,CAACwB;QAAK;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrB/G,OAAA;UAAK0G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/B3G,OAAA;YAAA2G,QAAA,EAAInG,IAAI,CAACyB;UAAW;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eAEN/G,OAAA;UAAK0G,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3G,OAAA;YAAK0G,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB3G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5C/G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,GAAEnG,IAAI,CAAC0B,SAAS,EAAC,UAAQ;YAAA;cAAA0E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACN/G,OAAA;YAAK0G,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB3G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzC/G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAEjG,SAAS,CAAC2D;YAAM;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACN/G,OAAA;YAAK0G,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB3G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxC/G,OAAA;cAAM0G,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAEnG,IAAI,CAAC2B;YAAS;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN/G,OAAA;UAAK0G,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC3G,OAAA;YAAA2G,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtB/G,OAAA;YAAA2G,QAAA,gBACE3G,OAAA;cAAA2G,QAAA,EAAI;YAA2D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpE/G,OAAA;cAAA2G,QAAA,EAAI;YAAuF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChG/G,OAAA;cAAA2G,QAAA,EAAI;YAAiE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1E/G,OAAA;cAAA2G,QAAA,EAAI;YAA+F;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAEN/G,OAAA;UAAQ0G,SAAS,EAAC,wBAAwB;UAACM,OAAO,EAAErD,eAAgB;UAAAgD,QAAA,EAAC;QAErE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,MAAME,eAAe,GAAGvG,SAAS,CAACE,oBAAoB,CAAC;EAEvD,oBACEZ,OAAA;IAAK0G,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1C3G,OAAA;MAAK0G,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3G,OAAA;QAAA2G,QAAA,EAAKnG,IAAI,CAACwB;MAAK;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrB/G,OAAA;QAAK0G,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB3G,OAAA;UAAM0G,SAAS,EAAE1F,QAAQ,GAAG,EAAE,GAAG,cAAc,GAAG,EAAG;UAAA2F,QAAA,GAAC,iBACrC,EAACxD,UAAU,CAACnC,QAAQ,CAAC;QAAA;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/G,OAAA;MAAK0G,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B3G,OAAA;QAAK0G,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B3G,OAAA;UACE0G,SAAS,EAAC,eAAe;UACzBQ,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACvG,OAAO,CAAC,CAACqD,MAAM,CAACmD,CAAC,IAAIA,CAAC,KAAK,IAAI,KAAK,CAAC3C,KAAK,CAACC,OAAO,CAAC0C,CAAC,CAAC,IAAIA,CAAC,CAACjD,MAAM,GAAG,CAAC,CAAC,CAAC,CAACA,MAAM,GAAG3D,SAAS,CAAC2D,MAAM,GAAG,GAAG;UAAI;QAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1I;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN/G,OAAA;QAAK0G,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,WACpB,EAAC/F,oBAAoB,GAAG,CAAC,EAAC,OAAK,EAACF,SAAS,CAAC2D,MAAM;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/G,OAAA;MAAK0G,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3G,OAAA;QAAK0G,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/B3G,OAAA;UAAK0G,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC3G,OAAA;YAAA2G,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClB/G,OAAA;YAAK0G,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9BjG,SAAS,CAACyE,GAAG,CAAC,CAACoC,CAAC,EAAE/C,KAAK,kBACtBxE,OAAA;cAEE0G,SAAS,EAAE,mBAAmB9F,oBAAoB,KAAK4D,KAAK,GAAG,QAAQ,GAAG,EAAE,IAAIC,kBAAkB,CAAC8C,CAAC,CAACxF,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;cAC7HiF,OAAO,EAAEA,CAAA,KAAMzC,cAAc,CAACC,KAAK,CAAE;cAAAmC,QAAA,EAEpCnC,KAAK,GAAG;YAAC,GAJL+C,CAAC,CAACxF,EAAE;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKH,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/G,OAAA;QAAK0G,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B3G,OAAA;UAAK0G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B3G,OAAA;YAAI0G,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEM,eAAe,CAAC7E;UAAI;YAAAwE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAEzD/G,OAAA;YAAK0G,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BM,eAAe,CAAC5E,IAAI,KAAK,iBAAiB;YACzC;YACA4E,eAAe,CAAC1E,OAAO,CAAC4C,GAAG,CAACqC,MAAM,iBAChCxH,OAAA;cAEE0G,SAAS,EAAE,eAAe5F,OAAO,CAACmG,eAAe,CAAClF,EAAE,CAAC,KAAKyF,MAAM,CAACzF,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;cACxFiF,OAAO,EAAEA,CAAA,KAAMpD,kBAAkB,CAACqD,eAAe,CAAClF,EAAE,EAAEyF,MAAM,CAACzF,EAAE,CAAE;cAAA4E,QAAA,gBAEjE3G,OAAA;gBAAK0G,SAAS,EAAC,cAAc;gBAAAC,QAAA,eAC3B3G,OAAA;kBAAK0G,SAAS,EAAC;gBAAa;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC,eACN/G,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEa,MAAM,CAACpF;cAAI;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,GAP3CS,MAAM,CAACzF,EAAE;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQX,CACN,CAAC;YAEF;YACAE,eAAe,CAAC1E,OAAO,CAAC4C,GAAG,CAACqC,MAAM,iBAChCxH,OAAA;cAEE0G,SAAS,EAAE,wBAAwB,CAAC5F,OAAO,CAACmG,eAAe,CAAClF,EAAE,CAAC,IAAI,EAAE,EAAE2D,QAAQ,CAAC8B,MAAM,CAACzF,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;cAAA4E,QAAA,gBAE/G3G,OAAA;gBACE0G,SAAS,EAAC,iBAAiB;gBAC3BM,OAAO,EAAEA,CAAA,KAAMhD,oBAAoB,CACjCiD,eAAe,CAAClF,EAAE,EAClByF,MAAM,CAACzF,EAAE,EACT,CAAC,CAACjB,OAAO,CAACmG,eAAe,CAAClF,EAAE,CAAC,IAAI,EAAE,EAAE2D,QAAQ,CAAC8B,MAAM,CAACzF,EAAE,CACzD,CAAE;gBAAA4E,QAAA,EAED,CAAC7F,OAAO,CAACmG,eAAe,CAAClF,EAAE,CAAC,IAAI,EAAE,EAAE2D,QAAQ,CAAC8B,MAAM,CAACzF,EAAE,CAAC,iBACtD/B,OAAA;kBAAK0G,SAAS,EAAC;gBAAgB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cACtC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACN/G,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEa,MAAM,CAACpF;cAAI;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,GAf3CS,MAAM,CAACzF,EAAE;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgBX,CACN;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN/G,OAAA;UAAK0G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B3G,OAAA;YACE0G,SAAS,EAAC,mBAAmB;YAC7BM,OAAO,EAAE1C,YAAa;YACtBmD,QAAQ,EAAE7G,oBAAoB,KAAK,CAAE;YAAA+F,QAAA,EACtC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAERnG,oBAAoB,GAAGF,SAAS,CAAC2D,MAAM,GAAG,CAAC,gBAC1CrE,OAAA;YACE0G,SAAS,EAAC,iBAAiB;YAC3BM,OAAO,EAAE5C,YAAa;YAAAuC,QAAA,EACvB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAET/G,OAAA;YACE0G,SAAS,EAAC,iBAAiB;YAC3BM,OAAO,EAAEnC,mBAAoB;YAAA8B,QAAA,EAC9B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLvF,eAAe,iBACdxB,OAAA;MAAK0G,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B3G,OAAA;QAAK0G,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B3G,OAAA;UAAA2G,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB/G,OAAA;UAAA2G,QAAA,EAAG;QAAuD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9D/G,OAAA;UAAK0G,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B3G,OAAA;YAAQ0G,SAAS,EAAC,mBAAmB;YAACM,OAAO,EAAElC,oBAAqB;YAAA6B,QAAA,EAAC;UAErE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT/G,OAAA;YAAQ0G,SAAS,EAAC,iBAAiB;YAACM,OAAO,EAAE9D,gBAAiB;YAAAyD,QAAA,EAAC;UAE/D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7G,EAAA,CAhfID,UAAU;EAAA,QACKL,SAAS,EACXC,WAAW,EACJC,OAAO;AAAA;AAAA4H,EAAA,GAH3BzH,UAAU;AAkfhB,eAAeA,UAAU;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}